<UserControl x:Class="JolTudomE_Client.View.StudentView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:helper="clr-namespace:JolTudomE_Client.Helper"
      xmlns:model="clr-namespace:JolTudomE_Client.Model"
      xmlns:wsmodel="clr-namespace:JolTudomE_Client.JolTudomEWSService"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
      mc:Ignorable="d" 
      xmlns:vm="clr-namespace:JolTudomE_Client.ViewModel"
	>
  <UserControl.DataContext>
    <Binding Path="Student" Source="{StaticResource VMLocator}"/>
  </UserControl.DataContext>
  <UserControl.Resources>
    <helper:RadioButtonConverter x:Key="RadioButtonConverter" />
    <helper:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <helper:RoutedPropertyChangedEventArgsToObjectConverter x:Key="RoutedPropertyChangedEventArgsToObjectConverter" />
    <helper:ErrorMsgToVisibilityConverter x:Key="ErrorMsgToVisibilityConverter"/>

    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type model:PersonRole}">
      <Label Content="{Binding RoleName}"/>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type wsmodel:PersonDetails}">
      <Label Content="{Binding TreeDisplayName}"/>
    </HierarchicalDataTemplate>

  </UserControl.Resources>
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Loaded">
      <mvvm:EventToCommand
                Command="{Binding LoadedEventCommand, Mode=OneWay}"
                />
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <!--<RowDefinition />-->
      <RowDefinition />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>

    <!--<Border Grid.ColumnSpan="2" Style="{DynamicResource BorderStyle}">
      <TextBlock Text="Mi legyen ennek a nezetnek a cime????" Style="{DynamicResource BorderCaption}" />
    </Border>-->

    <StackPanel Visibility="{Binding ShowPersonList, Converter={StaticResource BoolToVisibilityConverter}}"
                Grid.Column="0" Margin="5" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0"  >
      <TreeView x:Name="trvUsers" ItemsSource="{Binding PersonTreeList}" Margin="5">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="SelectedItemChanged">
            <mvvm:EventToCommand
                Command="{Binding UserTreeSelectionChangedCommand, Mode=OneWay}"
                EventArgsConverter="{StaticResource RoutedPropertyChangedEventArgsToObjectConverter}"
                EventArgsConverterParameter="{Binding ElementName=trvUsers}"
                PassEventArgsToCommand="True" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
        <TreeView.ItemContainerStyle>
          <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
              <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </TreeView.ItemContainerStyle>
      </TreeView>
    </StackPanel>

    <Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition />
      </Grid.RowDefinitions>
      <Expander Header="Új teszt végrahajtása" IsExpanded="{Binding IsNewTestExpanded, Mode=TwoWay}"
              Margin="5" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" >
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*" />
            <ColumnDefinition Width="200*" />
          </Grid.ColumnDefinitions>
          <StackPanel Grid.Row="0" Grid.Column="0" Margin="3" HorizontalAlignment="Left" >
            <TextBlock Text="Kérdések száma:" />
            <StackPanel Orientation="Horizontal" Margin="5,5,5,20" HorizontalAlignment="Center" >
              <RadioButton IsChecked="{Binding Path=NumberQuestion, Converter={StaticResource RadioButtonConverter}, ConverterParameter=10}"
                         GroupName="NumQuestion" Content="10" Margin="5" />
              <RadioButton IsChecked="{Binding Path=NumberQuestion, Converter={StaticResource RadioButtonConverter}, ConverterParameter=15}"
                         GroupName="NumQuestion" Content="15" Margin="5" />
              <RadioButton IsChecked="{Binding Path=NumberQuestion, Converter={StaticResource RadioButtonConverter}, ConverterParameter=20}"
                         GroupName="NumQuestion" Content="20" Margin="5" />
            </StackPanel>
            <TextBlock Text="Kurzus:" />
            <ComboBox ItemsSource="{Binding CourseList}" SelectedItem="{Binding SelectedCourse, Mode=TwoWay}"
                  HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="0,10,0,0">
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <StackPanel>
                    <TextBlock Text="{Binding CourseName}" FontWeight="Bold" />
                    <TextBlock Text="{Binding CourseDescription}" FontStyle="Italic" Margin="5,0,0,0" />
                  </StackPanel>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </StackPanel>
          <StackPanel Grid.Row="0" Grid.Column="1" Margin="3" HorizontalAlignment="Left" >
            <TextBlock Text="Témakör:" />
            <ListBox ItemsSource="{Binding TopicList}" 
            SelectionMode="Extended"
                  HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Height="200" Margin="0,10,0,0" >
              <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                  <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                  <Setter Property="Background" Value="Transparent" />
                  <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                      <Setter Property="Background" Value="Blue" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ListBox.ItemContainerStyle>

              <ListBox.ItemTemplate>
                <DataTemplate>
                  <StackPanel>
                    <TextBlock Text="{Binding TopicName}" FontWeight="Bold" />
                    <TextBlock Text="{Binding TopicDescription}" FontStyle="Italic" Margin="5,0,0,0" />
                  </StackPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
          </StackPanel>
          <Button Content="Teszt Indítás" Command="{Binding StartTestCommand, Mode=OneWay}" 
                Grid.Row="1" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Center" Width="200"  />
          <TextBlock Text="{Binding ErrorMsg, Mode=TwoWay}" Visibility="{Binding ErrorMsg, Converter={StaticResource ErrorMsgToVisibilityConverter}}"
                     Grid.Row="2" Grid.ColumnSpan="2" Style="{DynamicResource ErrorMsgStyle}" />
        </Grid>
      </Expander>
      <GroupBox Header="{Binding TestResultCaption}" Grid.Row="1">
        <GroupBox Header="Statisztika" Margin="3">
          <DataGrid ItemsSource="{Binding StatisticList}" SelectedItem="{Binding SelectedStatistics}" 
                      IsReadOnly="True" AutoGenerateColumns="False" Margin="3" IsSynchronizedWithCurrentItem="True" SelectionMode="Single" 
                      MaxHeight="350">
            <DataGrid.Columns>
              <DataGridTemplateColumn Header="Teszt Részlet">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Content="..." Command="{Binding Path=DataContext.cmdTestDetails,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                        CommandParameter="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Margin="3" ToolTip="Teszt Részleteinek Megtekintése" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>

              <DataGridTextColumn Header="Teszt Ideje" Binding="{Binding Generated, StringFormat=\{0:g\}}" />
              <DataGridTextColumn Header="Kérdések Száma" Binding="{Binding Questions}" />
              <DataGridTextColumn Header="Helyes Válaszok Száma" Binding="{Binding CorrectAnswer}"/>
              <DataGridTextColumn Header="Százalék" Binding="{Binding Percent, StringFormat=\{0:P\}}" />
              <DataGridTextColumn Header="Végrehajtási idő" Binding="{Binding TotalTime}" />
            </DataGrid.Columns>
          </DataGrid>
        </GroupBox>
      </GroupBox>
    </Grid>
  </Grid>
</UserControl>