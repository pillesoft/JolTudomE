//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace JolTudomE_WS.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JolTudomEEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JolTudomEEntities object using the connection string found in the 'JolTudomEEntities' section of the application configuration file.
        /// </summary>
        public JolTudomEEntities() : base("name=JolTudomEEntities", "JolTudomEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JolTudomEEntities object.
        /// </summary>
        public JolTudomEEntities(string connectionString) : base(connectionString, "JolTudomEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JolTudomEEntities object.
        /// </summary>
        public JolTudomEEntities(EntityConnection connection) : base(connection, "JolTudomEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public ObjectResult<PersonDetails> usp_Authenticate(global::System.String username, global::System.String password)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PersonDetails>("usp_Authenticate", usernameParameter, passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="person">No Metadata Documentation available.</param>
        /// <param name="callerid">No Metadata Documentation available.</param>
        /// <param name="roleid">No Metadata Documentation available.</param>
        public ObjectResult<Statistics> usp_Statistics(Nullable<global::System.Int32> person, Nullable<global::System.Int32> callerid, Nullable<global::System.Int32> roleid)
        {
            ObjectParameter personParameter;
            if (person.HasValue)
            {
                personParameter = new ObjectParameter("person", person);
            }
            else
            {
                personParameter = new ObjectParameter("person", typeof(global::System.Int32));
            }
    
            ObjectParameter calleridParameter;
            if (callerid.HasValue)
            {
                calleridParameter = new ObjectParameter("callerid", callerid);
            }
            else
            {
                calleridParameter = new ObjectParameter("callerid", typeof(global::System.Int32));
            }
    
            ObjectParameter roleidParameter;
            if (roleid.HasValue)
            {
                roleidParameter = new ObjectParameter("roleid", roleid);
            }
            else
            {
                roleidParameter = new ObjectParameter("roleid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Statistics>("usp_Statistics", personParameter, calleridParameter, roleidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="testid">No Metadata Documentation available.</param>
        /// <param name="person">No Metadata Documentation available.</param>
        /// <param name="callerid">No Metadata Documentation available.</param>
        /// <param name="roleid">No Metadata Documentation available.</param>
        public ObjectResult<TestDetails> usp_Eval(Nullable<global::System.Int32> testid, Nullable<global::System.Int32> person, Nullable<global::System.Int32> callerid, Nullable<global::System.Int32> roleid)
        {
            ObjectParameter testidParameter;
            if (testid.HasValue)
            {
                testidParameter = new ObjectParameter("testid", testid);
            }
            else
            {
                testidParameter = new ObjectParameter("testid", typeof(global::System.Int32));
            }
    
            ObjectParameter personParameter;
            if (person.HasValue)
            {
                personParameter = new ObjectParameter("person", person);
            }
            else
            {
                personParameter = new ObjectParameter("person", typeof(global::System.Int32));
            }
    
            ObjectParameter calleridParameter;
            if (callerid.HasValue)
            {
                calleridParameter = new ObjectParameter("callerid", callerid);
            }
            else
            {
                calleridParameter = new ObjectParameter("callerid", typeof(global::System.Int32));
            }
    
            ObjectParameter roleidParameter;
            if (roleid.HasValue)
            {
                roleidParameter = new ObjectParameter("roleid", roleid);
            }
            else
            {
                roleidParameter = new ObjectParameter("roleid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TestDetails>("usp_Eval", testidParameter, personParameter, calleridParameter, roleidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="testid">No Metadata Documentation available.</param>
        /// <param name="person">No Metadata Documentation available.</param>
        public int usp_CancelTest(Nullable<global::System.Int32> testid, Nullable<global::System.Int32> person)
        {
            ObjectParameter testidParameter;
            if (testid.HasValue)
            {
                testidParameter = new ObjectParameter("testid", testid);
            }
            else
            {
                testidParameter = new ObjectParameter("testid", typeof(global::System.Int32));
            }
    
            ObjectParameter personParameter;
            if (person.HasValue)
            {
                personParameter = new ObjectParameter("person", person);
            }
            else
            {
                personParameter = new ObjectParameter("person", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_CancelTest", testidParameter, personParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Courses> usp_GetCourses()
        {
            return base.ExecuteFunction<Courses>("usp_GetCourses");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="courseid">No Metadata Documentation available.</param>
        public ObjectResult<Topics> usp_GetTopics(Nullable<global::System.Int32> courseid)
        {
            ObjectParameter courseidParameter;
            if (courseid.HasValue)
            {
                courseidParameter = new ObjectParameter("courseid", courseid);
            }
            else
            {
                courseidParameter = new ObjectParameter("courseid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Topics>("usp_GetTopics", courseidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="prefix">No Metadata Documentation available.</param>
        /// <param name="lastname">No Metadata Documentation available.</param>
        /// <param name="middlename">No Metadata Documentation available.</param>
        /// <param name="firstname">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="role">No Metadata Documentation available.</param>
        public int usp_AddNewUser(global::System.String username, global::System.String prefix, global::System.String lastname, global::System.String middlename, global::System.String firstname, global::System.String password, Nullable<global::System.Byte> role)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter prefixParameter;
            if (prefix != null)
            {
                prefixParameter = new ObjectParameter("prefix", prefix);
            }
            else
            {
                prefixParameter = new ObjectParameter("prefix", typeof(global::System.String));
            }
    
            ObjectParameter lastnameParameter;
            if (lastname != null)
            {
                lastnameParameter = new ObjectParameter("lastname", lastname);
            }
            else
            {
                lastnameParameter = new ObjectParameter("lastname", typeof(global::System.String));
            }
    
            ObjectParameter middlenameParameter;
            if (middlename != null)
            {
                middlenameParameter = new ObjectParameter("middlename", middlename);
            }
            else
            {
                middlenameParameter = new ObjectParameter("middlename", typeof(global::System.String));
            }
    
            ObjectParameter firstnameParameter;
            if (firstname != null)
            {
                firstnameParameter = new ObjectParameter("firstname", firstname);
            }
            else
            {
                firstnameParameter = new ObjectParameter("firstname", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter roleParameter;
            if (role.HasValue)
            {
                roleParameter = new ObjectParameter("role", role);
            }
            else
            {
                roleParameter = new ObjectParameter("role", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction("usp_AddNewUser", usernameParameter, prefixParameter, lastnameParameter, middlenameParameter, firstnameParameter, passwordParameter, roleParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="testid">No Metadata Documentation available.</param>
        /// <param name="questionid">No Metadata Documentation available.</param>
        /// <param name="answerid">No Metadata Documentation available.</param>
        /// <param name="complete">No Metadata Documentation available.</param>
        public int usp_CheckedAnswer(Nullable<global::System.Int32> testid, Nullable<global::System.Int32> questionid, Nullable<global::System.Int32> answerid, Nullable<global::System.Boolean> complete)
        {
            ObjectParameter testidParameter;
            if (testid.HasValue)
            {
                testidParameter = new ObjectParameter("testid", testid);
            }
            else
            {
                testidParameter = new ObjectParameter("testid", typeof(global::System.Int32));
            }
    
            ObjectParameter questionidParameter;
            if (questionid.HasValue)
            {
                questionidParameter = new ObjectParameter("questionid", questionid);
            }
            else
            {
                questionidParameter = new ObjectParameter("questionid", typeof(global::System.Int32));
            }
    
            ObjectParameter answeridParameter;
            if (answerid.HasValue)
            {
                answeridParameter = new ObjectParameter("answerid", answerid);
            }
            else
            {
                answeridParameter = new ObjectParameter("answerid", typeof(global::System.Int32));
            }
    
            ObjectParameter completeParameter;
            if (complete.HasValue)
            {
                completeParameter = new ObjectParameter("complete", complete);
            }
            else
            {
                completeParameter = new ObjectParameter("complete", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_CheckedAnswer", testidParameter, questionidParameter, answeridParameter, completeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleid">No Metadata Documentation available.</param>
        /// <param name="sroleid">No Metadata Documentation available.</param>
        public ObjectResult<PersonDetails> usp_GetAllUsers(Nullable<global::System.Int32> roleid, Nullable<global::System.Int32> sroleid)
        {
            ObjectParameter roleidParameter;
            if (roleid.HasValue)
            {
                roleidParameter = new ObjectParameter("roleid", roleid);
            }
            else
            {
                roleidParameter = new ObjectParameter("roleid", typeof(global::System.Int32));
            }
    
            ObjectParameter sroleidParameter;
            if (sroleid.HasValue)
            {
                sroleidParameter = new ObjectParameter("sroleid", sroleid);
            }
            else
            {
                sroleidParameter = new ObjectParameter("sroleid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PersonDetails>("usp_GetAllUsers", roleidParameter, sroleidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        public int usp_AddNewCourse(global::System.String name, global::System.String description)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_AddNewCourse", nameParameter, descriptionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="courseid">No Metadata Documentation available.</param>
        public int usp_EditCourse(global::System.String name, global::System.String description, Nullable<global::System.Int32> courseid)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter courseidParameter;
            if (courseid.HasValue)
            {
                courseidParameter = new ObjectParameter("courseid", courseid);
            }
            else
            {
                courseidParameter = new ObjectParameter("courseid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_EditCourse", nameParameter, descriptionParameter, courseidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="courseid">No Metadata Documentation available.</param>
        public int usp_AddNewTopic(global::System.String name, global::System.String description, Nullable<global::System.Int32> courseid)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter courseidParameter;
            if (courseid.HasValue)
            {
                courseidParameter = new ObjectParameter("courseid", courseid);
            }
            else
            {
                courseidParameter = new ObjectParameter("courseid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_AddNewTopic", nameParameter, descriptionParameter, courseidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="topicid">No Metadata Documentation available.</param>
        /// <param name="courseid">No Metadata Documentation available.</param>
        public int usp_EditTopic(global::System.String name, global::System.String description, Nullable<global::System.Int32> topicid, Nullable<global::System.Int32> courseid)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter topicidParameter;
            if (topicid.HasValue)
            {
                topicidParameter = new ObjectParameter("topicid", topicid);
            }
            else
            {
                topicidParameter = new ObjectParameter("topicid", typeof(global::System.Int32));
            }
    
            ObjectParameter courseidParameter;
            if (courseid.HasValue)
            {
                courseidParameter = new ObjectParameter("courseid", courseid);
            }
            else
            {
                courseidParameter = new ObjectParameter("courseid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_EditTopic", nameParameter, descriptionParameter, topicidParameter, courseidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="timeout">No Metadata Documentation available.</param>
        public int usp_SessionsCleanup(Nullable<global::System.Int32> timeout)
        {
            ObjectParameter timeoutParameter;
            if (timeout.HasValue)
            {
                timeoutParameter = new ObjectParameter("timeout", timeout);
            }
            else
            {
                timeoutParameter = new ObjectParameter("timeout", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_SessionsCleanup", timeoutParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="timeout">No Metadata Documentation available.</param>
        public int usp_CleanupTests(Nullable<global::System.Int32> timeout)
        {
            ObjectParameter timeoutParameter;
            if (timeout.HasValue)
            {
                timeoutParameter = new ObjectParameter("timeout", timeout);
            }
            else
            {
                timeoutParameter = new ObjectParameter("timeout", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_CleanupTests", timeoutParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JolTudomEModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="lastAction">Initial value of the LastAction property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static Session CreateSession(global::System.String token, global::System.DateTime lastAction, global::System.Int32 personID, global::System.Int32 roleID)
        {
            Session session = new Session();
            session.Token = token;
            session.LastAction = lastAction;
            session.PersonID = personID;
            session.RoleID = roleID;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                if (_Token != value)
                {
                    OnTokenChanging(value);
                    ReportPropertyChanging("Token");
                    _Token = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Token");
                    OnTokenChanged();
                }
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastAction
        {
            get
            {
                return _LastAction;
            }
            set
            {
                OnLastActionChanging(value);
                ReportPropertyChanging("LastAction");
                _LastAction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastAction");
                OnLastActionChanged();
            }
        }
        private global::System.DateTime _LastAction;
        partial void OnLastActionChanging(global::System.DateTime value);
        partial void OnLastActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="JolTudomEModel", Name="Courses")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Courses : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Courses object.
        /// </summary>
        /// <param name="courseID">Initial value of the CourseID property.</param>
        /// <param name="courseName">Initial value of the CourseName property.</param>
        public static Courses CreateCourses(global::System.Int32 courseID, global::System.String courseName)
        {
            Courses courses = new Courses();
            courses.CourseID = courseID;
            courses.CourseName = courseName;
            return courses;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseDescription
        {
            get
            {
                return _CourseDescription;
            }
            set
            {
                OnCourseDescriptionChanging(value);
                ReportPropertyChanging("CourseDescription");
                _CourseDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseDescription");
                OnCourseDescriptionChanged();
            }
        }
        private global::System.String _CourseDescription;
        partial void OnCourseDescriptionChanging(global::System.String value);
        partial void OnCourseDescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="JolTudomEModel", Name="PersonDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PersonDetails : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonDetails object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static PersonDetails CreatePersonDetails(global::System.String firstName, global::System.String lastName, global::System.Int32 personID, global::System.Int32 roleID)
        {
            PersonDetails personDetails = new PersonDetails();
            personDetails.FirstName = firstName;
            personDetails.LastName = lastName;
            personDetails.PersonID = personID;
            personDetails.RoleID = roleID;
            return personDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="JolTudomEModel", Name="Statistics")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Statistics : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statistics object.
        /// </summary>
        /// <param name="testID">Initial value of the TestID property.</param>
        /// <param name="generated">Initial value of the Generated property.</param>
        /// <param name="correctAnswer">Initial value of the CorrectAnswer property.</param>
        public static Statistics CreateStatistics(global::System.Int32 testID, global::System.DateTime generated, global::System.Int32 correctAnswer)
        {
            Statistics statistics = new Statistics();
            statistics.TestID = testID;
            statistics.Generated = generated;
            statistics.CorrectAnswer = correctAnswer;
            return statistics;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Generated
        {
            get
            {
                return _Generated;
            }
            set
            {
                OnGeneratedChanging(value);
                ReportPropertyChanging("Generated");
                _Generated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Generated");
                OnGeneratedChanged();
            }
        }
        private global::System.DateTime _Generated;
        partial void OnGeneratedChanging(global::System.DateTime value);
        partial void OnGeneratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Questions
        {
            get
            {
                return _Questions;
            }
            set
            {
                OnQuestionsChanging(value);
                ReportPropertyChanging("Questions");
                _Questions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Questions");
                OnQuestionsChanged();
            }
        }
        private Nullable<global::System.Int32> _Questions;
        partial void OnQuestionsChanging(Nullable<global::System.Int32> value);
        partial void OnQuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorrectAnswer
        {
            get
            {
                return _CorrectAnswer;
            }
            set
            {
                OnCorrectAnswerChanging(value);
                ReportPropertyChanging("CorrectAnswer");
                _CorrectAnswer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrectAnswer");
                OnCorrectAnswerChanged();
            }
        }
        private global::System.Int32 _CorrectAnswer;
        partial void OnCorrectAnswerChanging(global::System.Int32 value);
        partial void OnCorrectAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percent;
        partial void OnPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> TotalTime
        {
            get
            {
                return _TotalTime;
            }
            set
            {
                OnTotalTimeChanging(value);
                ReportPropertyChanging("TotalTime");
                _TotalTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalTime");
                OnTotalTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _TotalTime;
        partial void OnTotalTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnTotalTimeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="JolTudomEModel", Name="TestDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TestDetails : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestDetails object.
        /// </summary>
        /// <param name="questionText">Initial value of the QuestionText property.</param>
        /// <param name="correctAnswer">Initial value of the CorrectAnswer property.</param>
        public static TestDetails CreateTestDetails(global::System.String questionText, global::System.String correctAnswer)
        {
            TestDetails testDetails = new TestDetails();
            testDetails.QuestionText = questionText;
            testDetails.CorrectAnswer = correctAnswer;
            return testDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChekedAnswer
        {
            get
            {
                return _ChekedAnswer;
            }
            set
            {
                OnChekedAnswerChanging(value);
                ReportPropertyChanging("ChekedAnswer");
                _ChekedAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChekedAnswer");
                OnChekedAnswerChanged();
            }
        }
        private global::System.String _ChekedAnswer;
        partial void OnChekedAnswerChanging(global::System.String value);
        partial void OnChekedAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CorrectAnswer
        {
            get
            {
                return _CorrectAnswer;
            }
            set
            {
                OnCorrectAnswerChanging(value);
                ReportPropertyChanging("CorrectAnswer");
                _CorrectAnswer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CorrectAnswer");
                OnCorrectAnswerChanged();
            }
        }
        private global::System.String _CorrectAnswer;
        partial void OnCorrectAnswerChanging(global::System.String value);
        partial void OnCorrectAnswerChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="JolTudomEModel", Name="Topics")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Topics : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topics object.
        /// </summary>
        /// <param name="topicID">Initial value of the TopicID property.</param>
        /// <param name="topicName">Initial value of the TopicName property.</param>
        public static Topics CreateTopics(global::System.Int32 topicID, global::System.String topicName)
        {
            Topics topics = new Topics();
            topics.TopicID = topicID;
            topics.TopicName = topicName;
            return topics;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicID
        {
            get
            {
                return _TopicID;
            }
            set
            {
                OnTopicIDChanging(value);
                ReportPropertyChanging("TopicID");
                _TopicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicID");
                OnTopicIDChanged();
            }
        }
        private global::System.Int32 _TopicID;
        partial void OnTopicIDChanging(global::System.Int32 value);
        partial void OnTopicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TopicName
        {
            get
            {
                return _TopicName;
            }
            set
            {
                OnTopicNameChanging(value);
                ReportPropertyChanging("TopicName");
                _TopicName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TopicName");
                OnTopicNameChanged();
            }
        }
        private global::System.String _TopicName;
        partial void OnTopicNameChanging(global::System.String value);
        partial void OnTopicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TopicDescription
        {
            get
            {
                return _TopicDescription;
            }
            set
            {
                OnTopicDescriptionChanging(value);
                ReportPropertyChanging("TopicDescription");
                _TopicDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TopicDescription");
                OnTopicDescriptionChanged();
            }
        }
        private global::System.String _TopicDescription;
        partial void OnTopicDescriptionChanging(global::System.String value);
        partial void OnTopicDescriptionChanged();

        #endregion

    }

    #endregion

    
}
